#version 410 core

layout (location = 0) out vec4 color;

// Input from vertex shader
in VS_OUT
{
    vec3 N;
    vec3 L;
    vec3 V;
	vec3 color;
	vec2 tc;
} fs_in;

uniform sampler2D colorTexture;
uniform sampler2D normalTexture;

void main(void)
{
    // Calculate per-pixel normal and light vector
    vec3 N = normalize(fs_in.N);
    vec3 L = fs_in.L;

    // Simple N dot L diffuse lighting
    float tc = pow(max(0.0, dot(N, L)), 5.0);

    // Sample from cell shading texture
	color = texture2D(colorTexture, fs_in.tc);
}